{
	"name": "dataflow1",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "DS_Races_list_csv",
						"type": "DatasetReference"
					},
					"name": "RawRacingList"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "DelimitedText1",
						"type": "DatasetReference"
					},
					"name": "SinkRacingList",
					"rejectedDataLinkedService": {
						"referenceName": "LS_ADLG2",
						"type": "LinkedServiceReference"
					}
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"source(output(",
				"          Date0 as string,",
				"          Date1 as string,",
				"          Race as string,",
				"          Winner as string,",
				"          Class as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     inferDriftedColumnTypes: true,",
				"     ignoreNoFilesFound: false,",
				"     rowUrlColumn: 'FileName') ~> RawRacingList",
				"RawRacingList derive(Year = substring(FileName, 13, 4),",
				"          {Start Date} = toDate(concat(split(Date1, '.')[1], '-', split(Date1, '.')[2], '-', substring(FileName, 13, 4)), 'dd-MM-yyyy'),",
				"          {End Date} = toDate(concat(split(iif(instr(Date0, '-') == 0, Date0, trim(split(Date0, '-')[2])), '.')[1], '-', split(iif(instr(Date0, '-') == 0, Date0, trim(split(Date0, '-')[2])), '.')[2], '-', substring(FileName, 13, 4)), 'dd-MM-yyyy')) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     input(",
				"          Start_Date as string,",
				"          End_Date as string,",
				"          Race as string,",
				"          Winner as string,",
				"          Class as string",
				"     ),",
				"     rowUrlColumn:'Year',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     mapColumn(",
				"          Race,",
				"          Winner,",
				"          Class",
				"     )) ~> SinkRacingList"
			]
		}
	}
}